using System;
using System.Collections.Generic;
using System.Text;
using COLID.ReportingService.Common.DataModels;

namespace COLID.ReportingService.UnitTests.Builder
{
    public class PropertyStatisticsBuilder
    {
        private PropertyStatistics statistics;

        public PropertyStatisticsBuilder()
        {
            statistics = new PropertyStatistics();
        }

        public PropertyStatistics Build()
        {
            return statistics;
        }

        public PropertyStatisticsBuilder GenerateSampleCountOfPropertiesData()
        {
            WithName("Count of Properties");
            WithIncrement(1);

            var items = new List<PropertyStatisticItem>()
            {
                new PropertyStatisticItemBuilder("Mathematical Model Category", "5", "https://pid.bayer.com/kos/19050/hasMathematicalModelCategory", "5").Build(),
                new PropertyStatisticItemBuilder("Coding", "6", "https://pid.bayer.com/d188c668-b710-45b2-9631-faf29e85ac8d/has_coding", "8").Build(),
                new PropertyStatisticItemBuilder("Total Number Of Patients", "7", "https://pid.bayer.com/d188c668-b710-45b2-9631-faf29e85ac8d/has_total_number_of_patients", "8").Build(),
                new PropertyStatisticItemBuilder("Dimension", "7", "https://pid.bayer.com/d188c668-b710-45b2-9631-faf29e85ac8d/contains_rwd_dimension", "8").Build(),
                new PropertyStatisticItemBuilder("Contains Information About Therapeutic Area", "8", "https://pid.bayer.com/d188c668-b710-45b2-9631-faf29e85ac8d/contains_information_about_therapeutic_area", "8").Build(),
                new PropertyStatisticItemBuilder("Generated By", "8", "https://pid.bayer.com/d188c668-b710-45b2-9631-faf29e85ac8d/was_generated_by", "8").Build(),
                new PropertyStatisticItemBuilder("Competency Questions", "13", "http://pid.bayer.com/kos/19014/hasCompetencyQuestion", "426").Build(),
                new PropertyStatisticItemBuilder("Historic Version", "68", "https://pid.bayer.com/kos/19050/hasHistoricVersion", "875").Build(),
                new PropertyStatisticItemBuilder("Keywords", "264", "https://pid.bayer.com/kos/19050/47119343", "875").Build(),
                new PropertyStatisticItemBuilder("Editorial Note", "311", "https://pid.bayer.com/kos/19050/hasPIDEditorialNote", "875").Build(),
                new PropertyStatisticItemBuilder("Distribution Endpoint", "466", "https://pid.bayer.com/kos/19050/distribution", "875").Build(),
                new PropertyStatisticItemBuilder("Data Steward", "720", "https://pid.bayer.com/kos/19050/hasDataSteward", "875").Build(),
            };
            WithPropertyStatisticItems(items);

            return this;
        }

        public PropertyStatisticsBuilder GenerateSamplePropertyUsageByGroupData()
        {
            WithIncrement(1);

            var items = new List<PropertyStatisticItem>()
            {
                new PropertyStatisticItemBuilder("0", "837", null, null).Build(),
                new PropertyStatisticItemBuilder("1", "12", null, null).Build(),
                new PropertyStatisticItemBuilder("2", "18", null, null).Build(),
                new PropertyStatisticItemBuilder("3", "5", null, null).Build(),
                new PropertyStatisticItemBuilder("4", "2", null, null).Build(),
                new PropertyStatisticItemBuilder("7", "1", null, null).Build()

            };
            WithPropertyStatisticItems(items);

            return this;
        }

        public PropertyStatisticsBuilder GenerateSampleControlledVocabularySelectionData()
        {
            WithIncrement(0);
            WithName("Consumer Group");

            var items = new List<PropertyStatisticItem>()
            {
                new PropertyStatisticItemBuilder("INDIGO", "309", Graph.Metadata.Constants.Resource.HasConsumerGroup, "875").Build(),
                new PropertyStatisticItemBuilder("Data Services", "471", Graph.Metadata.Constants.Resource.HasConsumerGroup, "875").Build(),
                new PropertyStatisticItemBuilder("GeAR Metadata", "36", Graph.Metadata.Constants.Resource.HasConsumerGroup, "875").Build(),
                new PropertyStatisticItemBuilder("DINOS", "59", Graph.Metadata.Constants.Resource.HasConsumerGroup, "875").Build()
            };
            WithPropertyStatisticItems(items);

            return this;
        }

        public PropertyStatisticsBuilder GenerateSampletNumberOfVersionsOfResources()
        {
            WithName("Number of resource versions");
            WithIncrement(1);

            var items = new List<PropertyStatisticItem>()
            {
                new PropertyStatisticItemBuilder("", "", null, "").Build(),
            };
            WithPropertyStatisticItems(items);

            return this;
        }

        public PropertyStatisticsBuilder WithName(string name)
        {
            statistics.Name = name;
            return this;
        }

        public PropertyStatisticsBuilder WithIncrement(int increment)
        {
            statistics.Increment = increment;
            return this;
        }

        public PropertyStatisticsBuilder WithPropertyStatisticItems(IList<PropertyStatisticItem> statisticItems)
        {
            statistics.Counts = statisticItems;
            return this;
        }
    }
}
